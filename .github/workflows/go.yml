# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        # Docker Hub image
        image: postgres
        # Provide password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: demo1234
          POSTGRES_DB: nyatta-test
        ports:
          - 5432:5432
        # Set health check to wait until postgres is up
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
    
    # Print Go version
    - name: Display Go Version
      run: go version

    # Install project dependencies
    - name: Install dependencies
      run: go get .

    - name: Build
      run: go build -v ./...

    - name: Test
      env:
        # DB - postgresql
        DBDRIVER: postgres
        DBHOST: localhost
        DBPORT: 5432
        DBNAME: nyatta-test
        DBUSER: postgres
        DBPASS: demo1234
        DBSSLMODE: disable
        # Server
        PORT: 4000
        SERVERPORT: 4000
        # Server env
        SERVERENV: development
        # Jwt
        JWTEXPIRE: 3600s
        JWTSECRET: t95xjRO2nWOnfj4HdxgrXKwHSzOl6DOmgyA919pk2PUofbBrsgQRwvptzcbVmDP3 # generated by - (pwgen -s -1 64)
      run: go test -v ./...
       
